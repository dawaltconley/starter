@mixin themeify($selectors...) {
    $group: ();
    @each $selector in $selectors {
        $group: append($group, "& #{$selector}, #{selector-unify(&, $selector)}", "comma");
    }

    @at-root #{$group} {
        @content;
    }
}

@function darken-bg($primary, $secondary, $tertiary: null) {
    @if $tertiary {
        @return mix(mix($primary, $tertiary, 85%), $secondary, 16%);
    } @else {
        @return mix($primary, $secondary, 16%);
    }
}

@mixin accessibility($name, $background-color, $text-color, $brand-color: null, $accessibility: "AA") {
    $aa: to-upper-case(inspect($accessibility)) == inspect("AA");
    $aaa: to-uppder-case(inspect($accessibility)) == inspect("AAA");

    $ct-tx-bg: ch-color-contrast($background-color, $text-color);

    @if $ct-tx-bg < 4.5 and $aa {
        @warn "The contrast ratio of the '#{$name}' theme's text (#{$text-color}) and background (#{$background-color}) colors is #{$ct-tx-bg}, which does not meet WCAG 2.0 AA standard (4.5).";
    } @else if $ct-tx-bg < 7 and $aaa {
        @warn "The contrast ratio of the '#{$name}' theme's text (#{$text-color}) and background (#{$background-color}) colors is #{$ct-tx-bg}, which does not meet WCAG 2.0 AAA standard (7).";
    }

    @if $brand-color {
        $ct-br-tx: ch-color-contrast($brand-color, $text-color);
        $ct-br-bg: ch-color-contrast($brand-color, $background-color);

        @if $ct-br-tx < 3 and $aa {
            @warn "The contrast ratio of the '#{$name}' theme's link (#{$brand-color}) and text (#{$text-color}) colors is #{$ct-br-tx}, which does not meet WCAG 2.0 AA standard (3).";
        }
        @if $ct-br-bg < 4.5 and $aa {
            @warn "The contrast ratio of the '#{$name}' theme's link (#{$brand-color}) and background (#{$background-color}) colors is #{$ct-br-bg}, which does not meet WCAG 2.0 AA standard (4.5).";
        } @else if $ct-br-bg < 7 and $aaa {
            @warn "The contrast ratio of the '#{$name}' theme's link (#{$brand-color}) and background (#{$background-color}) colors is #{$ct-br-bg}, which does not meet WCAG 2.0 AAA standard (7).";
        }
    }
}

@mixin theme($background-color, $text-color, $brand-color: null) {
    $light-text: null; $light-theme: null; $ld-tx-bg: null; $ld-br-tx: null; $ld-br-bg: null; $ct-tx-bg: null; $ct-br-tx: null; $ct-br-bg: null;

    $light-theme: lightness($text-color) < lightness($background-color);
    $ld-tx-bg: abs(lightness($text-color) - lightness($background-color)) / 100%;
    @if $brand-color {
        $ld-br-tx: abs(lightness($brand-color) - lightness($text-color)) / 100%;
        $ld-br-bg: abs(lightness($brand-color) - lightness($background-color)) / 100%;
    }

    @if $light-theme {
        $light-text: mix($text-color, $background-color, 58%);
        -webkit-font-smoothing: subpixel-antialiased;
        -moz-osx-font-smoothing: auto;
    } @else {
        $light-text: mix($text-color, $background-color, 86%);
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }

    // Basic Styles

    background-color: $background-color;
    color: $text-color;
    border-color: $text-color;

    $dark-background: darken-bg($text-color, $background-color, $brand-color); // I don't love this solution for some reason

    @include themeify("blockquote") {
        color: $light-text;
        border-left-color: mix($light-text, $background-color, 25%);
    }

    @include themeify("pre", "code") {
        @if $light-theme {
            $box-color: darken($background-color, $ld-tx-bg * 15%);
            $box-color: desaturate($box-color, saturation($box-color) / 2 );
            color: mix($text-color, $box-color, 80%);
            border-color: darken($box-color, $ld-tx-bg * 25%);
            background-color: $box-color;
        } @else {
            $box-color: lighten($background-color, $ld-tx-bg * 15%);
            $box-color: desaturate($box-color, saturation($box-color) / 2 );
            color: mix($text-color, $box-color, 80%);
            border-color: darken($box-color, $ld-tx-bg * 10%);
            background-color: $box-color;
        }
    }

    // Text

    @include themeify(".text-light") {
        color: $light-text;
    }

    @include themeify(".text-brand") {
        color: $brand-color;
    }

    // Background

    @include themeify(".theme-bg") {
        background-color: $background-color;
    }

    // Borders

    @include themeify(".border-light") {
        @include all-sides {
            border-#{$side}-color: mix($text-color, $background-color, 10%);
        }
    }

    @include themeify(".border-x-light") {
        @include all-sides {
            border-#{$side}-color: mix($text-color, $background-color, 5%);
        }
    }

    // Links

    @if $brand-color {
        @include themeify("a") {
            color: $brand-color;

            @if $text-color and $background-color {
                &:hover { color: darken($brand-color, $ld-br-tx * 45%); }
                &:visited { color: lighten($brand-color, $ld-br-bg * 35%); }
            } @else {
                &:hover { color: darken($brand-color, 15%); }
                &:visited { color: darken($brand-color, 25%); }
            }
        }
    }

    @include themeify(".subtle-link") {
        &, &:hover, &:visited {
            color: $text-color;
        }
    }

    @include themeify(".hover-shade") {
        transition-property: background-color;

        @include hover {
            background-color: $dark-background;
        }
    }

    @include themeify(".hover-shade-dark") {
        @include mq("header", (lt: max)) {
            background-color: $dark-background;
            transition-property: background-color;

            @include hover {
                background-color: darken-bg($text-color, $dark-background, $brand-color);
            }
        }
    }

    // SVG

    @include themeify(".fill-color-theme") {
        &-text {
            fill: $text-color;
        }
        &-bg {
            fill: $background-color;
        }
        &-brand {
            fill: $brand-color;
        }
    }

    @include themeify(".stroke-color-theme") {
        &-text {
            stroke: $text-color;
        }
        &-bg {
            stroke: $background-color;
        }
        &-brand {
            stroke: $brand-color;
        }
    }
}

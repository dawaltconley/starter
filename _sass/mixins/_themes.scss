@mixin themeify($selectors...) {
    $group: ();
    @each $selector in $selectors {
        $group: append($group, "& #{$selector}, #{selector-unify(&, $selector)}", "comma");
    }

    @at-root #{$group} {
        @content;
    }
}


@mixin theme($background-color: null, $text-color: null, $brand-color: null, $light-text: null, $accessibility: "AA") {
    $light-theme: null; $ld-tx-bg: null; $ld-br-tx: null; $ld-br-bg: null; $ct-tx-bg: null; $ct-br-tx: null; $ct-br-bg: null;
    $aa: to-upper-case(inspect($accessibility)) == "AA";
    $aaa: to-upper-case(inspect($accessibility)) == "AAA";

    @if $background-color and $text-color {
        $light-theme: lightness($text-color) < lightness($background-color);
        $ld-tx-bg: abs(lightness($text-color) - lightness($background-color)) / 100%;
        $ct-tx-bg: ch-color-contrast($background-color, $text-color);

        @if $light-theme and not($light-text) {
            $light-text: mix($text-color, $background-color, 58%);
        } @else {
            $light-text: mix($text-color, $background-color, 72%);
        }

        @if $light-theme {
            -webkit-font-smoothing: subpixel-antialiased;
            -moz-osx-font-smoothing: auto;
        } @else {
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }

        @if $ct-tx-bg < 4.5 and $aa {
            @warn "The contrast ratio of a theme's text (#{$text-color}) and background (#{$background-color}) colors is #{$ct-tx-bg}, which does not meet WCAG 2.0 AA standards.";
        } @else if $ct-tx-bg < 7 and $aaa {
            @warn "The contrast ratio of a theme's text (#{$text-color}) and background (#{$background-color}) colors is #{$ct-tx-bg}, which does not meet WCAG 2.0 AAA standards.";
        }
    } @else if not($brand-color or $light-text) {
        @if $background-color { @warn "Insufficient arguments passed to theme include: $background-color needs to be accompanied by a $text-color."; }
        @else if $text-color { @warn "Insufficient arguments passed to theme include: $text-color needs to be accompanied by a $background-color."; }
        @else { @warn "No arguments passed to theme include."; }
    }

    @if $brand-color and $text-color and $background-color {
        $ld-br-tx: abs(lightness($brand-color) - lightness($text-color)) / 100%;
        $ld-br-bg: abs(lightness($brand-color) - lightness($background-color)) / 100%;
        $ct-br-tx: ch-color-contrast($brand-color, $text-color);
        $ct-br-bg: ch-color-contrast($brand-color, $background-color);

        @if $ct-br-tx < 3 and $aa {
            @warn "The contrast ratio of a theme's link (#{$brand-color}) and text (#{$text-color}) colors is #{$ct-br-tx}, which does not meet WCAG 2.0 AA standards.";
        }
        @if $ct-br-bg < 4.5 and $aa {
            @warn "The contrast ratio of a theme's link (#{$brand-color}) and background (#{$background-color}) colors is #{$ct-br-bg}, which does not meet WCAG 2.0 AA standards.";
        } @else if $ct-br-bg < 7 and $aaa {
            @warn "The contrast ratio of a theme's link (#{$brand-color}) and background (#{$background-color}) colors is #{$ct-br-bg}, which does not meet WCAG 2.0 AAA standards.";
        }
    }

    background-color: $background-color;
    color: $text-color;
    border-color: $text-color;

    @include themeify(".fill-color-theme") {
        &-text {
            fill: $text-color;
        }
        &-bg {
            fill: $background-color;
        }
        &-brand {
            fill: $brand-color;
        }
    }

    @include themeify(".stroke-color-theme") {
        &-text {
            stroke: $text-color;
        }
        &-bg {
            stroke: $background-color;
        }
        &-brand {
            stroke: $brand-color;
        }
    }

    @if $background-color and $text-color {
        @include themeify("blockquote") {
            color: $light-text;
            border-left-color: mix($light-text, $background-color, 25%);
        }

        @include themeify("pre", "code") {
            @if $light-theme {
                $box-color: darken($background-color, $ld-tx-bg * 15%);
                $box-color: desaturate($box-color, saturation($box-color) / 2 );
                color: mix($text-color, $box-color, 80%);
                border-color: darken($box-color, $ld-tx-bg * 25%);
                background-color: $box-color;
            } @else {
                $box-color: lighten($background-color, $ld-tx-bg * 15%);
                $box-color: desaturate($box-color, saturation($box-color) / 2 );
                color: mix($text-color, $box-color, 80%);
                border-color: darken($box-color, $ld-tx-bg * 10%);
                background-color: $box-color;
            }
        }

        @include themeify(".text-light") {
            color: $light-text;
        }

        @include themeify(".border-light") {
            @include all-sides {
                border-#{$side}-color: mix($text-color, $background-color, 10%);
            }
        }

        @include themeify(".border-x-light") {
            @include all-sides {
                border-#{$side}-color: mix($text-color, $background-color, 5%);
            }
        }
    } @else if $light-text {
        @include themeify("blockquote") {
            color: $light-text;
            border-left-color: lighten($light-text, 25%);
        }

        @include themeify(".text-light") {
            color: $light-text;
        }
    }

    @if $brand-color {
        @include themeify("a") {
            color: $brand-color;

            @if $text-color and $background-color {
                &:hover { color: darken($brand-color, $ld-br-tx * 45%); }
                &:visited { color: lighten($brand-color, $ld-br-bg * 35%); }
            } @else {
                &:hover { color: darken($brand-color, 15%); }
                &:visited { color: darken($brand-color, 25%); }
            }
        }
    }

    @include themeify(".subtle-link") {
        &, &:hover, &:visited {
            color: $text-color;
        }
    }

    @include themeify(".hover-shade-bg") {
        &:hover {
            background-color: mix($text-color, $background-color, 16%);
        }
    }
}
